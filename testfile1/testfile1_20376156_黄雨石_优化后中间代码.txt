(STR0) ,
(STR1) \n
(STR2) ,
(STR3) ,
(STR4) \n
DEF_VAL 10 N(0,1)
DEF_ARR a(0,1)
ASSIGN 0 a(0,1)[0]
ASSIGN 1 a(0,1)[1]
ASSIGN 2 a(0,1)[2]
ASSIGN 3 a(0,1)[3]
ASSIGN 4 a(0,1)[4]
ASSIGN 5 a(0,1)[5]
ASSIGN 6 a(0,1)[6]
ASSIGN 7 a(0,1)[7]
ASSIGN 8 a(0,1)[8]
ASSIGN 9 a(0,1)[9]
END_DEF_ARR a(0,1)
======FUNC: fib(0,1)======
EQ i(1,1) 1 (T0)
EQZ_JUMP (T0) (LABEL0)
RETURN 1
(LABEL0):
EQ i(1,1) 2 (T1)
EQZ_JUMP (T1) (LABEL3)
RETURN 2
(LABEL3):
PREPARE_CALL fib(0,1)
SUB i(1,1) 1 (T2)
PUSH_PAR_INT (T2)
CALL fib(0,1)
ASSIGN (RT) (T3)
PREPARE_CALL fib(0,1)
SUB i(1,1) 2 (T4)
PUSH_PAR_INT (T4)
CALL fib(0,1)
ASSIGN (RT) (T5)
ADD (T3) (T5) (T6)
RETURN (T6)
======FUNC_END: fib(0,1)======
======FUNC: main(0,1)======
GET_INT i(1,2)
GET_INT j(1,2)
MUL i(1,2) j(1,2) (T7)
SUB 0 (T7) (T8)
PREPARE_CALL fib(0,1)
PUSH_PAR_INT 4
CALL fib(0,1)
ASSIGN (RT) (T9)
MUL (T8) (T9) (T10)
ASSIGN a(0,1)[1] (T12)
ADD (T10) (T12) (T14)
MUL (T14) 5 i(1,2)
PREPARE_CALL fib(0,1)
PREPARE_CALL fib(0,1)
PUSH_PAR_INT 5
CALL fib(0,1)
ASSIGN (RT) (T17)
ADD (T17) 2 (T18)
PUSH_PAR_INT (T18)
CALL fib(0,1)
ASSIGN (RT) (T19)
SUB 1197 (T19) (T20)
ADD (T20) -10091 j(1,2)
(LABEL6):
LE i(1,2) 100 (T22)
EQZ_JUMP (T22) (LABEL8)
(LABEL7):
ASSIGN a(0,1)[0] (T23)
ADD (T23) 36 (T25)
ASSIGN (T25) a(0,1)[0]
ASSIGN a(0,1)[1] (T26)
ADD (T26) 36 (T28)
ASSIGN (T28) a(0,1)[1]
ASSIGN a(0,1)[2] (T29)
ADD (T29) 36 (T31)
ASSIGN (T31) a(0,1)[2]
ASSIGN a(0,1)[3] (T32)
ADD (T32) 36 (T34)
ASSIGN (T34) a(0,1)[3]
ASSIGN a(0,1)[4] (T35)
ADD (T35) 36 (T37)
ASSIGN (T37) a(0,1)[4]
ASSIGN a(0,1)[5] (T38)
ADD (T38) 36 (T40)
ASSIGN (T40) a(0,1)[5]
ASSIGN a(0,1)[6] (T41)
ADD (T41) 36 (T43)
ASSIGN (T43) a(0,1)[6]
ASSIGN a(0,1)[7] (T44)
ADD (T44) 36 (T46)
ASSIGN (T46) a(0,1)[7]
ASSIGN a(0,1)[8] (T47)
ADD (T47) 36 (T49)
ASSIGN (T49) a(0,1)[8]
ASSIGN a(0,1)[9] (T50)
ADD (T50) 36 (T52)
ASSIGN (T52) a(0,1)[9]
ADD i(1,2) 1 i(1,2)
LE i(1,2) 100 (T54)
NEZ_JUMP (T54) (LABEL7)
(LABEL8):
ASSIGN 0 i(1,2)
(LABEL11):
(LABEL12):
ASSIGN a(0,1)[i(1,2)] (T56)
PRINT_INT (T56)
PRINT_STR (STR0)
ADD i(1,2) 1 i(1,2)
LT i(1,2) 10 (T58)
NEZ_JUMP (T58) (LABEL12)
(LABEL13):
PRINT_STR (STR1)
PRINT_INT i(1,2)
PRINT_STR (STR2)
PRINT_INT j(1,2)
PRINT_STR (STR3)
PRINT_INT -6
PRINT_STR (STR4)
RETURN 0
======FUNC_END: main(0,1)======