(STR0) ,
(STR1) \n
(STR2) ,
(STR3) ,
(STR4) \n
DEF_VAL 10 N(0,1)
DEF_ARR a(0,1)
ASSIGN 0 a(0,1)[0]
ASSIGN 1 a(0,1)[1]
ASSIGN 2 a(0,1)[2]
ASSIGN 3 a(0,1)[3]
ASSIGN 4 a(0,1)[4]
ASSIGN 5 a(0,1)[5]
ASSIGN 6 a(0,1)[6]
ASSIGN 7 a(0,1)[7]
ASSIGN 8 a(0,1)[8]
ASSIGN 9 a(0,1)[9]
END_DEF_ARR a(0,1)

========FUNC: fib(0,1)========
EQ i(1,1) 1 (T0)
EQZ_JUMP (T0) (LABEL0)
--------BLOCK_BEGIN: (2,1)-------
RETURN 1
--------BLOCK_END: (2,1)-------
JUMP (LABEL1)
(LABEL0):
(LABEL1):
EQ i(1,1) 2 (T1)
EQZ_JUMP (T1) (LABEL3)
--------BLOCK_BEGIN: (2,2)-------
RETURN 2
--------BLOCK_END: (2,2)-------
JUMP (LABEL4)
(LABEL3):
(LABEL4):
PREPARE_CALL fib(0,1)
SUB i(1,1) 1 (T2)
PUSH_PAR_INT (T2)
CALL fib(0,1)
ASSIGN (RT) (T3)
PREPARE_CALL fib(0,1)
SUB i(1,1) 2 (T4)
PUSH_PAR_INT (T4)
CALL fib(0,1)
ASSIGN (RT) (T5)
ADD (T3) (T5) (T6)
RETURN (T6)
========FUNC_END: fib(0,1)========


========FUNC: main(0,1)========
DEF_VAL 2 i(1,2)
DEF_VAL 5 j(1,2)
DEF_VAL 1 a1(1,2)
DEF_VAL 2 a2(1,2)
GET_INT i(1,2)
GET_INT j(1,2)
MUL i(1,2) j(1,2) (T7)
SUB 0 (T7) (T8)
PREPARE_CALL fib(0,1)
PUSH_PAR_INT 4
CALL fib(0,1)
ASSIGN (RT) (T9)
MUL (T8) (T9) (T10)
ADD (T10) 0 (T11)
ASSIGN a(0,1)[1] (T12)
MUL (T12) 1 (T13)
ADD (T11) (T13) (T14)
DIV 1 2 (T15)
SUB (T14) (T15) (T16)
MUL (T16) 5 (T17)
ASSIGN (T17) i(1,2)
MUL 7 5923 (T18)
MOD (T18) 56 (T19)
MUL (T19) 57 (T20)
PREPARE_CALL fib(0,1)
PREPARE_CALL fib(0,1)
PUSH_PAR_INT 5
CALL fib(0,1)
ASSIGN (RT) (T21)
ADD (T21) 2 (T22)
PUSH_PAR_INT (T22)
CALL fib(0,1)
ASSIGN (RT) (T23)
SUB (T20) (T23) (T24)
ADD a1(1,2) a2(1,2) (T25)
DIV 89 2 (T26)
MUL (T26) 36 (T27)
SUB (T27) 53 (T28)
DIV (T28) 1 (T29)
MUL (T29) 6 (T30)
SUB (T25) (T30) (T31)
MUL 45 56 (T32)
DIV (T32) 85 (T33)
SUB (T33) 56 (T34)
MUL 35 56 (T35)
DIV (T35) 4 (T36)
ADD (T34) (T36) (T37)
SUB (T37) 9 (T38)
MUL 2 (T38) (T39)
SUB (T31) (T39) (T40)
ADD (T24) (T40) (T41)
ASSIGN (T41) j(1,2)
ADD 0 6 (T42)
SUB 0 (T42) (T43)
ADD 0 (T43) (T44)
DEF_VAL (T44) k(1,2)
JUMP (LABEL6)
(LABEL6):
LE i(1,2) 100 (T45)
EQZ_JUMP (T45) (LABEL7)
--------BLOCK_BEGIN: (2,3)-------
ASSIGN a(0,1)[0] (T46)
MUL k(1,2) k(1,2) (T47)
ADD (T46) (T47) (T48)
ASSIGN (T48) a(0,1)[0]
ASSIGN a(0,1)[1] (T49)
MUL k(1,2) k(1,2) (T50)
ADD (T49) (T50) (T51)
ASSIGN (T51) a(0,1)[1]
ASSIGN a(0,1)[2] (T52)
MUL k(1,2) k(1,2) (T53)
ADD (T52) (T53) (T54)
ASSIGN (T54) a(0,1)[2]
ASSIGN a(0,1)[3] (T55)
MUL k(1,2) k(1,2) (T56)
ADD (T55) (T56) (T57)
ASSIGN (T57) a(0,1)[3]
ASSIGN a(0,1)[4] (T58)
MUL k(1,2) k(1,2) (T59)
ADD (T58) (T59) (T60)
ASSIGN (T60) a(0,1)[4]
ASSIGN a(0,1)[5] (T61)
MUL k(1,2) k(1,2) (T62)
ADD (T61) (T62) (T63)
ASSIGN (T63) a(0,1)[5]
ASSIGN a(0,1)[6] (T64)
MUL k(1,2) k(1,2) (T65)
ADD (T64) (T65) (T66)
ASSIGN (T66) a(0,1)[6]
ASSIGN a(0,1)[7] (T67)
MUL k(1,2) k(1,2) (T68)
ADD (T67) (T68) (T69)
ASSIGN (T69) a(0,1)[7]
ASSIGN a(0,1)[8] (T70)
MUL k(1,2) k(1,2) (T71)
ADD (T70) (T71) (T72)
ASSIGN (T72) a(0,1)[8]
ASSIGN a(0,1)[9] (T73)
MUL k(1,2) k(1,2) (T74)
ADD (T73) (T74) (T75)
ASSIGN (T75) a(0,1)[9]
ADD i(1,2) 1 (T76)
ASSIGN (T76) i(1,2)
--------BLOCK_END: (2,3)-------
JUMP (LABEL6)
(LABEL7):
ASSIGN 0 i(1,2)
JUMP (LABEL9)
(LABEL9):
LT i(1,2) 10 (T77)
EQZ_JUMP (T77) (LABEL10)
--------BLOCK_BEGIN: (2,4)-------
ASSIGN a(0,1)[i(1,2)] (T78)
PRINT_INT (T78)
PRINT_STR (STR0)
ADD i(1,2) 1 (T79)
ASSIGN (T79) i(1,2)
--------BLOCK_END: (2,4)-------
JUMP (LABEL9)
(LABEL10):
PRINT_STR (STR1)
PRINT_INT i(1,2)
PRINT_STR (STR2)
PRINT_INT j(1,2)
PRINT_STR (STR3)
PRINT_INT k(1,2)
PRINT_STR (STR4)
RETURN 0
========FUNC_END: main(0,1)========